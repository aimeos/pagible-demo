import{m as S,p as $,u as j,s as y,q as P,v as q,x as V,y as D,z as K,A as N,B as R,C as k,D as I,E as g,a as c,f as x,G as T,F as b,H as v,I as z,_ as G,b as H,r as W,o as J}from"../index.js";const L=$({pip:Boolean,pipIcon:{type:String,default:"$color"},...N(),...K(),...D(),...V(R(),["width"])},"VColorInput"),Q=S()({name:"VColorInput",props:L(),emits:{"update:modelValue":e=>!0},setup(e,p){let{slots:a}=p;const n=j(e,"modelValue"),o=y(!1),s=y(e.focused),i=P(()=>!e.disabled&&!e.readonly),t=P(()=>n.value||null);function h(r){if(r.key!=="Enter")return;if(!o.value||!s.value){o.value=!0;return}const m=r.target;n.value=m.value}function f(r){r.preventDefault(),r.stopPropagation(),o.value=!0}function F(){o.value=!1}function _(){o.value=!1}q(()=>{const r=k.filterProps(e),m=I.filterProps(V(e,["active","color"])),U=g.filterProps(V(e,["prependInnerIcon"])),w=!!(a.prepend||e.pipIcon);return c(g,v(U,{class:["v-color-input",e.class],style:e.style,modelValue:t.value,onKeydown:i.value?h:void 0,focused:o.value||s.value,"onClick:control":i.value?f:void 0,"onClick:prependInner":i.value?f:void 0,"onUpdate:focused":u=>s.value=u,"onClick:appendInner":i.value?f:void 0,"onUpdate:modelValue":u=>{n.value=u}}),{...a,prepend:e.pipIcon?u=>{var d;return x(b,null,[w&&c(T,{color:e.pip?n.value:void 0,icon:e.pipIcon},null),(d=a.prepend)==null?void 0:d.call(a,u)])}:void 0,default:()=>{var u;return x(b,null,[c(z,{modelValue:o.value,"onUpdate:modelValue":d=>o.value=d,activator:"parent",minWidth:"0",closeOnContentClick:!1,openOnClick:!1},{default:()=>[c(k,v(r,{modelValue:n.value,"onUpdate:modelValue":d=>n.value=d,onSave:F,onCancel:_}),{default:d=>{let{actions:B,model:C,save:A,cancel:E,isPristine:M}=d;function O(l){e.hideActions?n.value=l:C.value=l}return c(I,v(m,{modelValue:e.hideActions?n.value:C.value,"onUpdate:modelValue":l=>O(l),onMousedown:l=>l.preventDefault()}),{actions:e.hideActions?void 0:()=>{var l;return((l=a.actions)==null?void 0:l.call(a,{save:A,cancel:E,isPristine:M}))??B()}})}})]}),(u=a.default)==null?void 0:u.call(a)])}})})}}),X={components:{VColorInput:Q},props:{modelValue:{type:String,default:""},config:{type:Object,default:()=>{}},assets:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1},context:{type:Object}},emits:["update:modelValue","error"],methods:{update(e){this.$emit("update:modelValue",e)},async validate(){return await!0}}};function Y(e,p,a,n,o,s){const i=W("v-color-input");return J(),H(i,{rules:[t=>!a.config.required||!!t||e.$gettext("Value is required"),t=>!t||/^#[0-9A-F]{6,8}$/i.test(t)||e.$gettext("Value must be a hex color code")],clearable:!a.readonly,disabled:a.readonly,modelValue:a.modelValue,"onUpdate:modelValue":p[0]||(p[0]=t=>s.update(t))},null,8,["rules","clearable","disabled","modelValue"])}const ee=G(X,[["render",Y]]);export{ee as default};
