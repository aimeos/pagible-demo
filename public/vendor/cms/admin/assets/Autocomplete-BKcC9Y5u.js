import{_ as o,L as r,b as u,M as c,o as d}from"../index.js";const h={props:{modelValue:{type:[Object,String,Number,Boolean,null],default:null},config:{type:Object,default:()=>{}},assets:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1},context:{type:Object}},emits:["update:modelValue","error"],inject:["debounce"],data(){return{list:this.config.options||[],loading:!1}},created(){this.graphql=this.debounce(this.graphql,500),this.rest=this.debounce(this.rest,500)},methods:{get(e,i){return i.reduce((t,l)=>typeof t=="object"&&t!==null?t[l]:t,e)},graphql(e){var t;if(!((t=this.config)!=null&&t.query))return;const i=this.config.query.replace(/_term_/g,e?JSON.stringify(e):'""');this.loading=!0,this.$apollo.query({query:r`${i}`}).then(l=>{const n=this.toList(l.data).map(s=>{var a;return Object.assign({...s},JSON.parse(((a=s.latest)==null?void 0:a.data)||"{}"))});this.list=this.items(n),this.loading=!1}).catch(l=>{this.$log("Autocomplete::graphql(): Error fetching data",e,l)})},items(e){const i=this.config["item-title"].split("/"),t=this.config["item-value"].split("/");return(e||[]).map(l=>typeof l=="object"&&l!==null?i?{label:this.get(l,i),value:this.get(l,t)}:this.get(l,t):l)},rest(e){var i;(i=this.config)!=null&&i.url&&(this.loading=!0,fetch(this.config.url.replace(/_term_/g,e||""),{mode:"cors"}).then(t=>{if(!t.ok)throw t;return t.json()}).then(t=>{this.list=this.items(this.toList(t)),this.loading=!1}).catch(t=>{this.$log("Autocomplete::rest(): Error fetching data",e,t)}))},search(e){var i;switch((i=this.config)==null?void 0:i["api-type"]){case"GQL":this.graphql(e);break;case"REST":this.rest(e);break}},toList(e){return this.config["list-key"]?this.config["list-key"].split("/").reduce((i,t)=>typeof i=="object"&&i!==null?i[t]:i,e):e},update(e){this.$emit("update:modelValue",e),this.validate()},async validate(){var i;await this.$nextTick();const e=await((i=this.$refs.field)==null?void 0:i.validate());return this.$emit("error",(e==null?void 0:e.length)>0),!(e!=null&&e.length)}},watch:{modelValue:{immediate:!0,handler(e){this.validate()}}}};function f(e,i,t,l,n,s){return d(),u(c,{ref:"field",rules:[a=>!t.config.required||!!a||e.$gettext("Value is required")],items:n.list,loading:n.loading,readonly:t.readonly,clearable:!t.readonly,"no-data-text":t.config["empty-text"]||e.$gettext("No data available"),placeholder:t.config.placeholder||"","return-object":!!t.config["item-title"],multiple:t.config.multiple,chips:t.config.multiple,modelValue:t.modelValue,"onUpdate:modelValue":i[0]||(i[0]=a=>s.update(a)),"onUpdate:search":i[1]||(i[1]=a=>s.search(a)),"onUpdate:menu":i[2]||(i[2]=a=>s.search("")),density:"comfortable","hide-details":"auto",variant:"outlined","item-title":"label","item-value":"value"},null,8,["rules","items","loading","readonly","clearable","no-data-text","placeholder","return-object","multiple","chips","modelValue"])}const m=o(h,[["render",f]]);export{m as default};
