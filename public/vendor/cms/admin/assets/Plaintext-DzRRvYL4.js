import{_ as i,b as d,n as o,$ as c,o as u}from"../index.js";const m={props:{modelValue:{type:String,default:""},config:{type:Object,default:()=>{}},assets:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1}},emits:["update:modelValue","error"],methods:{update(e){this.$emit("update:modelValue",e),this.validate()},async validate(){var l;await this.$nextTick();const e=await((l=this.$refs.field)==null?void 0:l.validate());return this.$emit("error",(e==null?void 0:e.length)>0),!(e!=null&&e.length)}},watch:{modelValue:{immediate:!0,handler(e){this.validate()}}}};function s(e,l,a,f,r,n){return u(),d(c,{ref:"field",rules:[t=>!a.config.min||+(t==null?void 0:t.length)>=+a.config.min||e.$gettext("Minimum length is %{num} characters",{num:a.config.min}),t=>!a.config.max||+(t==null?void 0:t.length)<=+a.config.max||e.$gettext("Maximum length is %{num} characters",{num:a.config.max})],class:o(a.config.class),readonly:a.readonly,counter:a.config.max,placeholder:a.config.placeholder||"",modelValue:a.modelValue,"onUpdate:modelValue":l[0]||(l[0]=t=>n.update(t)),density:"comfortable","hide-details":"auto",variant:"outlined",clearable:""},null,8,["rules","class","readonly","counter","placeholder","modelValue"])}const g=i(m,[["render",s]]);export{g as default};
