import{_ as d,b as o,am as n,o as u}from"../index.js";const c={props:{modelValue:{type:String,default:""},config:{type:Object,default:()=>{}},assets:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1},context:{type:Object}},emits:["update:modelValue","error"],methods:{update(e){this.$emit("update:modelValue",e),this.validate()},async validate(){var l;await this.$nextTick();const e=await((l=this.$refs.field)==null?void 0:l.validate());return this.$emit("error",(e==null?void 0:e.length)>0),!(e!=null&&e.length)}},watch:{modelValue:{immediate:!0,handler(e){this.validate()}}}};function s(e,l,t,m,r,i){return u(),o(n,{ref:"field",rules:[a=>!t.config.required||!!a||e.$gettext("Value is required")],readonly:t.readonly,items:t.config.options||[],placeholder:t.config.placeholder||"",multiple:t.config.multiple,chips:t.config.multiple,modelValue:t.modelValue,"onUpdate:modelValue":l[0]||(l[0]=a=>i.update(a)),density:"comfortable","hide-details":"auto",variant:"outlined","item-title":"label"},null,8,["rules","readonly","items","placeholder","multiple","chips","modelValue"])}const h=d(c,[["render",s]]);export{h as default};
