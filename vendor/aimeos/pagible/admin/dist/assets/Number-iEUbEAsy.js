import{_ as i,b as n,ah as o,o as u}from"./index-zamkCzJL.js";const c={props:{modelValue:{type:Number,default:0},config:{type:Object,default:()=>{}},assets:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1},context:{type:Object}},emits:["update:modelValue","error"],methods:{update(e){this.$emit("update:modelValue",e),this.validate()},async validate(){var t;await this.$nextTick();const e=await((t=this.$refs.field)==null?void 0:t.validate());return this.$emit("error",(e==null?void 0:e.length)>0),!(e!=null&&e.length)}},watch:{modelValue:{immediate:!0,handler(e){this.validate()}}}};function r(e,t,a,m,f,d){return u(),n(o,{ref:"field",rules:[l=>!a.config.required||!!l||e.$gettext("Value is required")],readonly:a.readonly,clearable:!a.readonly&&!a.config.required,max:a.config.max,min:a.config.min,placeholder:a.config.placeholder||"",step:a.config.step||1,modelValue:a.modelValue||a.config.default||0,"onUpdate:modelValue":t[0]||(t[0]=l=>d.update(l)),density:"comfortable","hide-details":"auto",variant:"outlined"},null,8,["rules","readonly","clearable","max","min","placeholder","step","modelValue"])}const h=i(c,[["render",r]]);export{h as default};
